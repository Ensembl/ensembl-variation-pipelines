nextflow_process {

    name "Test Process removeDupIDs"
    script "nf_modules/remove_dup_ids.nf"
    process "removeDupIDs"

    test("Check default parameter value") {

        when {
            params {
                remove_nonunique_ids = 1
                remove_patch_regions = 1
            }
            process {
                """
                input[0] = tuple("$baseDir/tests/data/test_dup_renamed.vcf.gz", "test_genome", "test_source", 1, "tbi")
                """
            }
        }

        then {
            // assert process run correctly
            assert process.success
            
            // assert the content of the output file - no variants, only header lines
            assert path(process.out.get(0).get(0).get(0)).linesGzip.size() == 5
        }

    }
    
    test("Do not remove patch regions") {

        when {
            params {
                remove_nonunique_ids = 1
                remove_patch_regions = 0
            }
            process {
                """
                input[0] = tuple("$baseDir/tests/data/test_dup_renamed.vcf.gz", "test_genome", "test_source", 1, "tbi")
                """
            }
        }

        then {
            // assert process run correctly
            assert process.success
            
            // assert the content of the output file - one variant
            assert path(process.out.get(0).get(0).get(0)).linesGzip.size() == 6
            
        }

    }
    
    test("Do not remove non-unique ids") {

        when {
            params {
                remove_nonunique_ids = 0
                remove_patch_regions = 0
            }
            process {
                """
                input[0] = tuple("$baseDir/tests/data/test_dup_renamed.vcf.gz", "test_genome", "test_source", 1, "tbi")
                """
            }
        }

        then {
            // assert process run correctly
            assert process.success
            
            // assert the content of the output file - three variants
            assert path(process.out.get(0).get(0).get(0)).linesGzip.size() == 8
        }

    }

}
