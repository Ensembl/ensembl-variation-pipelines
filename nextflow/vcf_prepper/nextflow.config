trace.overwrite = true
dag.overwrite = true

params {
  // Ensembl version
  version = 108
  
  // Ensembl repositories
  repo_dir = "/hps/software/users/ensembl/variation/${USER}"

  // config files
  input_config = "${projectDir}/assets/input_sources.json"
  ini_file = "${projectDir}/assets/DEFAULT.ini"
  rank_file = "${projectDir}/assets/variation_consequnce_rank.json"
  
  // data directories - only work for human
  cache_dir = "/nfs/production/flicek/ensembl/variation/data/VEP/tabixconverted"
  fasta_dir = "/nfs/production/flicek/ensembl/variation/data/VEP/fasta"
  conservation_data_dir = "/nfs/production/flicek/ensembl/variation/data/Conservation"
  
  // output dir
  output_dir = "/nfs/production/flicek/ensembl/variation/new_website"
  temp_dir = params.output_dir + "/tmp"
  
  // pipeline control parameters
  bin_size = 250000
  remove_nonunique_ids = 1
  remove_patch_regions = 1
  skip_vep = 0
  skip_tracks = 0
  skip_stats = 0
  force_create_config = 0
  rename_clinvar_ids = 1
  queue_size = 1200
  queue = 'production'
}

profiles {
  standard {
    executor.name = 'local'
  }

  lsf {
    executor.name = 'lsf'
  }

  slurm {
    executor.name = 'slurm'
  } 
  
  // we need separate profile human because it takes lot of memory than others
  human {
    process{
      withName: 'runVEP'{
        cpus    = { 2 * task.attempt }
        memory  = { 16.GB * task.attempt }
        time    = { 72.hour * task.attempt }
      }

      withName: 'mergeVCF'{
        cpus    = { 1 * task.attempt }
        memory  = { 16.GB * task.attempt }
        time    = { 72.hour * task.attempt }
      }
    }
  }
}

process {
  cpus    = 1
  memory  = { 2.GB * task.attempt }
  time    = { 12.hour * task.attempt }
  queue   = params.queue

  // error strategy
  errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
  maxRetries    = 1

  withLabel: process_low {
    memory  = { 1.GB * task.attempt }
    time    = { 1.hour * task.attempt }
  }
  
  withLabel: process_medium {
    cpus    = { 1 * task.attempt }
    memory  = { 4.GB * task.attempt }
    time    = { 24.hour * task.attempt }
  }

  withLabel: process_long {
    cpus    = { 1 * task.attempt }
    memory  = { 4.GB * task.attempt }
    time    = { 48.hour * task.attempt }
  }
  
  withName: 'runVEP'{
    cpus    = { 2 * task.attempt }
    memory  = { 64.GB * task.attempt }
    time    = { 168.hour }
  }

  withName: 'mergeVCF'{
    cpus    = { 1 * task.attempt }
    memory  = { 32.GB * task.attempt }
    time    = { 96.hour }
  }

  withLabel: bcftools {
    container = 'docker://quay.io/biocontainers/bcftools:1.13--h3a49de5_0'
  }

  withLabel: vep {
    container = 'docker://ensemblorg/ensembl-vep'
  }
}

executor {
  queueSize = params.queue_size
  submitRateLimit = '50/10sec'
}

singularity {
  enabled = true
  autoMounts = true
}
